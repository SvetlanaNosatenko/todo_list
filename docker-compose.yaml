version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:base
    ports:
      - 8080:80
    depends_on:
      - api
  api:
    build:
      context: .
    environment:
      DB_PASSWORD: $DB_PASSWORD
      DB_USER: $DB_USER
      DB_NAME: $DB_NAME
      DB_HOST: postgres
      SECRET_KEY: $SECRET_KEY
      DEBUG: $DEBUG
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./.env:/app/.docker_env
  migrations:
    build:
      context: .
    environment:
      DB_PASSWORD: $DB_PASSWORD
      DB_USER: $DB_USER
      DB_NAME: $DB_NAME
      DB_HOST: postgres
      SECRET_KEY: $SECRET_KEY
      DEBUG: $DEBUG
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.env:/app/.docker_env
    command: python manage.py migrate
  postgres:
      image: postgres:latest
      environment:
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres" ]
        interval: 5s
        timeout: 5s
        retries: 5
      volumes:
        - ./postgres-data:/var/lib/postgresql/data